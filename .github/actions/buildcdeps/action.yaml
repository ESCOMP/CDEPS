name: CDEPS build and cache
description: 'Build the CDEPS library'
inputs:
  cdeps_version:
    description: 'Tag in the CDEPS repository to use'
    default: main
    required: False
    type: string
  pio_path:
    description: 'Path to the installed parallelio code root'
    default: $HOME/pio
    required: False
    type: string
  esmf_root:
    description: 'Path to the installed ESMF library'
    default: $HOME/ESMF
    required: False
    type: string
  src_root:
    description: 'Path to cdeps source'
    default: $GITHUB_WORKSPACE
    required: False
    type: string
  cmake_flags:
    description: 'Extra flags for cmake command'
    default: -Wno-dev
    required: False
    type: string
  install_prefix:
    description: 'Install path of cdeps'
    default: $HOME/cdeps
    required: False
    type: string
runs:
  using: composite
  steps:
    - id : Build-CDEPS
      shell: bash
      run: |
        mkdir build-cdeps
        pushd build-cdeps
        
        # We need to explicitly set ESMF_DIR and PIO_DIR to the location where
        # their respective CMake configuration files are.
        # The esmf-org action installs ESMFConfig.cmake in /ESMF/lib/cmake/ESMF.
        # The PIO action likely installs pio-config.cmake in /pio/lib/cmake.
        # By setting the variables directly, we bypass any issues with CMAKE_PREFIX_PATH.
        # This is a more robust approach.
        cmake \
          -D ESMF_DIR=${{ inputs.esmf_root }}/lib/cmake/ESMF \
          -D PIO_DIR=${{ inputs.pio_path }}/lib/cmake \
          ${{ inputs.cmake_flags }} ${{ inputs.src_root }}
        
        make VERBOSE=1
        popd
