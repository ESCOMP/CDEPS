# This is a workflow to compile the cdeps source without cime
name: cimebuild
# Controls when the action will run. Triggers the workflow on push or pull request
# events but only for the master branch
on:
  push:
    branches: [ master ]
  pull_request:
    branches: [ master ]

# A workflow run is made up of one or more jobs that can run sequentially or in parallel
jobs:
  build-cdeps-with-cime:
    runs-on: ubuntu-latest
    env:
      CC: mpicc
      FC: mpifort
      CXX: mpicxx
      CPPFLAGS: "-I/usr/include -I/usr/local/include"
      # Versions of all dependencies can be updated here
      ESMF_VERSION: ESMF_8_1_0_beta_snapshot_25
      PNETCDF_VERSION: pnetcdf-1.12.1
      NETCDF_FORTRAN_VERSION: v4.5.2
    steps:
      - uses: actions/checkout@v2
        # Build the ESMF library, if the cache contains a previous build
        # it will be used instead
      - id: cache-esmf
        uses: actions/cache@v2
        with:
          path: ~/ESMF
          key: ${{ runner.os }}-${{ env.ESMF_VERSION }}-ESMF
      - id: load-env
        run: sudo apt-get install gfortran wget openmpi-bin netcdf-bin libopenmpi-dev
      - id: build-ESMF
        if: steps.cache-esmf.outputs.cache-hit != 'true'
        run: |
          wget https://github.com/esmf-org/esmf/archive/${{ env.ESMF_VERSION }}.tar.gz
          tar -xzvf ${{ env.ESMF_VERSION }}.tar.gz
          pushd esmf-${{ env.ESMF_VERSION }}
          export ESMF_DIR=`pwd`
          export ESMF_COMM=openmpi
          export ESMF_YAMLCPP="internal"
          export ESMF_INSTALL_PREFIX=$HOME/ESMF
          export ESMF_BOPT=g
          make
          make install
          popd
      - id: cache-pnetcdf
        uses: actions/cache@v2
        with:
          path: ~/pnetcdf
          key: ${{ runner.os }}-${{ env.PNETCDF_VERSION}}-pnetcdf
      - name: pnetcdf build
        if: steps.cache-pnetcdf.outputs.cache-hit != 'true'
        run: |
          wget https://parallel-netcdf.github.io/Release/${{ env.PNETCDF_VERSION }}.tar.gz
          tar -xzvf ${{ env.PNETCDF_VERSION }}.tar.gz
          ls -l
          pushd ${{ env.PNETCDF_VERSION }}
          ./configure --prefix=$HOME/pnetcdf --enable-shared --disable-cxx
          make
          make install
          popd
      - name: Cache netcdf-fortran
        id: cache-netcdf-fortran
        uses: actions/cache@v2
        with:
          path: ~/netcdf-fortran
          key: ${{ runner.os }}-${{ env.NETCDF_FORTRAN_VERSION }}-netcdf-fortran
      - name: netcdf fortran build
        if: steps.cache-netcdf-fortran.outputs.cache-hit != 'true'
        run: |
          sudo apt-get install libnetcdf-dev
          wget https://github.com/Unidata/netcdf-fortran/archive/${{ env.NETCDF_FORTRAN_VERSION }}.tar.gz
          tar -xzvf ${{ env.NETCDF_FORTRAN_VERSION }}.tar.gz
          ls -l
          pushd netcdf-fortran-*
          ./configure --prefix=$HOME/netcdf-fortran
          make
          make install

      - name: Checkout cime
        run: |
          cd $HOME
          git clone https://github.com/jedwards4b/cime.git -b add_github_action
          cd $HOME/cime/src/components
          ln -fs $HOME/CDEPS cdeps
          cd $HOME/cime/src/drivers
          git clone https://github.com/ESCOMP/CMEPS.git nuopc
          cd $HOME/cime/scripts
          mkdir $HOME/scratch
          export CIME_MODEL=cesm
          ./create_test SMS.f19_g17.A.ubuntu_gnu
          #          ./create_test --machine ubuntu --xml-testlist

      - name: Cache inputdata
        id: cache-inputdata
        uses: actions/cache@v2
        with:
          path: ~/inputdata
          key: cesm-inputdata
