# This is a workflow to compile the cdeps source without cime
name: extbuild
# Controls when the action will run. Triggers the workflow on push or pull request
# events but only for the main branch
on:
  push:
    branches: [ main ]
  pull_request:
    branches: [ main ]

# A workflow run is made up of one or more jobs that can run sequentially or in parallel
jobs:
  build-cdeps:
    runs-on: ubuntu-latest
    env:
      CC: mpicc
      FC: mpifort
      CXX: mpicxx
      CPPFLAGS: "-I/usr/include -I/usr/local/include "
      LDFLAGS: "-L/usr/lib/x86_64-linux-gnu "
      # Versions of all dependencies can be updated here - these match tag names in the github repo
      ESMF_VERSION: v8.5.0
      ParallelIO_VERSION: pio2_6_0
    steps:
      - id: checkout-CDEPS
        uses: actions/checkout@v3
        with:
          submodules: recursive
      - id: load-env
        run: |
          sudo apt-get update
          sudo apt-get install gfortran
          sudo apt-get install wget
          sudo apt-get install openmpi-bin libopenmpi-dev
          sudo apt-get install netcdf-bin libnetcdf-dev libnetcdff-dev
          sudo apt-get install pnetcdf-bin libpnetcdf-dev
          sudo apt-get install autotools-dev autoconf
      - name: Cache PARALLELIO
        id: cache-PARALLELIO
        uses: actions/cache@v3
        with:
          path: ${GITHUB_WORKSPACE}/pio
          key: ${{ runner.os }}-${{ env.ParallelIO_VERSION }}-parallelio2
      - name: Build ParallelIO
        if: steps.cache-PARALLELIO.outputs.cache-hit != 'true'
        uses: NCAR/ParallelIO/.github/actions/parallelio_cmake@9390e30e29d4ebbfbef0fc72162cacd9e8f25e4e
        with:
          parallelio_version: ${{ env.ParallelIO_VERSION }}
          enable_fortran: True
          install_prefix: ${GITHUB_WORKSPACE}/pio
      - name: Install ESMF
        uses: esmf-org/install-esmf-action@v1
        env:
          ESMF_COMPILER: gfortran
          ESMF_BOPT: g
          ESMF_COMM: openmpi
          ESMF_NETCDF: nc-config
          ESMF_PNETCDF: pnetcdf-config
          ESMF_INSTALL_PREFIX: ${GITHUB_WORKSPACE}/ESMF
          ESMF_PIO: external
          ESMF_PIO_INCLUDE: ${GITHUB_WORKSPACE}/pio/include
          ESMF_PIO_LIBPATH: ${GITHUB_WORKSPACE}/pio/lib
        with:
          version: ${{ env.ESMF_VERSION }}
          esmpy: false
          cache: true
      
      - name: Build CDEPS
        uses: ./.github/actions/buildcdeps
        with:
          esmfmkfile: $ESMFMKFILE
          pio_path: ${GITHUB_WORKSPACE}/pio
          src_root: ${GITHUB_WORKSPACE}
          cmake_flags: " -Wno-dev -DCMAKE_BUILD_TYPE=DEBUG -DWERROR=ON  -DCMAKE_Fortran_FLAGS=\"-DCPRGNU -g -Wall \
          -ffree-form -ffree-line-length-none -fallow-argument-mismatch \""
      - name: Test CDEPS
        run: |
          cd build-cdeps
          make VERBOSE=1
